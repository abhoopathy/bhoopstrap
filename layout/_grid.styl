//https://github.com/eugeneware/semantic.gs/blob/c0aeccf76db0220af7a0841273b50a9fd60f3930/stylesheets/styl/grid.styl

/////////////////
// Semantic.gs // for Stylus: http://learnboost.github.com/stylus/
/////////////////

// Defaults which you can freely override
column-width = $bs-grid-column-width
gutter-width = $bs-grid-gutter-width
columns = $bs-grid-columns

// Utility function
gridsystem-width(_columns = columns)
    _columns * (column-width + gutter-width) 

// Set @total-width to 100% for a fluid layout
//total-width = 100%

_total-width(_columns = columns)
    if total-width is defined
        total-width
    else
        unit(gridsystem-width(_columns), px)

// Correcting percentage-to-pixel rounding errors in IE6 & 7
// See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// Override @min with the minimum width of your layout
min-width = 960
correction = (((0.5 / min-width) * 100) * 1%)

// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
clearfix()
    *zoom:1

    &:before,
    &:after
        content:""
        display:table

    &:after
        clear:both

//////////
// GRID //
//////////

body
    width 100%
    clearfix()

row(_columns = columns)
    display block
    width _total-width(_columns) * ((gutter-width + gridsystem-width(_columns) ) / gridsystem-width(_columns))
    margin 0 _total-width(_columns) * (((gutter-width * 0.5) / gridsystem-width(_columns) ) * - 1)
    *width (_total-width(_columns) * ((gutter-width + gridsystem-width(_columns) ) / gridsystem-width(_columns))) - correction
    *margin 0 _total-width(_columns) * (((gutter-width * 0.5) / gridsystem-width(_columns) ) * - 1) - correction
    clearfix()

column(x, _columns = columns)
    display inline
    float left
    width _total-width(_columns) * ((((gutter-width + column-width ) * x) - gutter-width) / gridsystem-width(_columns))
    margin 0 _total-width(_columns) * ((gutter-width * 0.5) / gridsystem-width(_columns))
    *width _total-width(_columns) * ((((gutter-width + column-width ) * x) - gutter-width) / gridsystem-width(_columns)) - correction
    *margin 0 _total-width(_columns) * ((gutter-width * 0.5) / gridsystem-width(_columns)) - correction

push(offset = 1)
    margin-left _total-width()*(((gutter-width+column-width)*offset + (gutter-width*0.5))/gridsystem-width())

pull(offset = 1)
    margin-right _total-width()*(((gutter-width+column-width)*offset + (gutter-width*0.5))/gridsystem-width())
